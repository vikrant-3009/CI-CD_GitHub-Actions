name: CI-CD workflow

on: workflow_dispatch

jobs:
  maven:
    name: Maven Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK-17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Unit Test
        run: mvn -f mvcapp/pom.xml test

      - name: Build Project
        run: mvn -f mvcapp/pom.xml clean package -Dmaven.test.failure.ignore=True

      - name: Upload JUnit Test Results
        uses: actions/upload-artifact@v3
        with:
          name: JUnit Test Report
          path: mvcapp/target/surefire-reports/TEST-*.xml

  sonar-and-artifactory:
    name: analyse-and-upload
    runs-on: centos-1
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Sonar Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          cd mvcapp
          mvn clean verify sonar:sonar \
          -Dsonar.projectKey=calculator-mvc \
          -Dsonar.sources=src/main/java \
          -Dsonar.tests=src/test/java \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.coverage.jacoco.xmlReportPaths=**/jacoco.xml

      - name: Upload to Artifactory
        env:
          JF_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          JF_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          JF_URL: ${{ secrets.ARTIFACTORY_URL }}
        run: |
          cd mvcapp
          curl -X PUT -u "$JF_USERNAME:$JF_PASSWORD" \
          -T target/mvcapp.war "$JF_URL/calculator-app/dev/mvcapp.war"

  docker:
    name: docker-build-and-deploy
    runs-on: centos-2
    needs: sonar-and-artifactory
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        id: build
        run: |
          cd mvcapp
          docker build \
          --build-arg="ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}" \
          --build-arg="ARTIFACTORY_PASSWORD=${{ secrets.ARTIFACTORY_PASSWORD }}" \
          --build-arg="ARTIFACTORY_URL=${{ secrets.ARTIFACTORY_URL }}" \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/demo-calculator:${{ github.run_number }} .

      - name: Push Image to DockerHub
        if: steps.build.outcome == 'success'
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/demo-calculator:${{ github.run_number }}

      - name: Pre Docker Run
        id: pre-run
        if: steps.build.outcome == 'success'
        run: |
          docker ps -q -a --filter name="^calculator-app$" | xargs -r docker stop calculator-app || true
          docker ps -q -a --filter name="^calculator-app$" | xargs -r docker rm calculator-app || true

      - name: Run the container
        if: steps.pre-run.outcome == 'success'
        run: |
          docker run -d -p 9010:8080 --name calculator-app \
          ${{ secrets.DOCKERHUB_USERNAME }}/demo-calculator:${{ github.run_number }}

  monitor:
    name: monitoring-using-dockprom
    runs-on: centos-2
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: setup dockprom
        env:
          CADDY_USER: ${{ secrets.CADDY_USER }}
          CADDY_PASSWORD: ${{ secrets.CADDY_PASSWORD }}
          CADDY_PASSWORD_HASH: ${{ secrets.CADDY_PASSWORD_HASH }}
        run: |
          git clone ${{ vars.DOCKPROM_REPO_URL }} && cd dockprom
          ADMIN_USER='$CADDY_USER' ADMIN_PASSWORD='$CADDY_PASSWORD' ADMIN_PASSWORD_HASH='$CADDY_PASSWORD_HASH'
          docker compose up -d

  selenium:
    name: selenium-automation-test
    runs-on: centos-2
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Test
        run: |
          export JAVA_HOME=/opt/jdk-17.0.2/
          export M2_HOME=/opt/apache-maven-3.9.6/
          export PATH=$PATH:$M2_HOME/bin
          mvn -f selenium-testing/pom.xml test -Dmaven.test.failure.ignore=true \
          -Dhostname=192.168.56.104 -Dport=9010 -Dcontext=/mvcapp/calculate

      - name: Upload Selenium Test Report
        uses: actions/upload-artifact@v3
        with:
          name: Selenium Test Report
          path: selenium-testing/target/surefire-reports/emailable-report.html

  jmeter:
    name: jmeter-performance-test
    runs-on: centos-1
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Test
        run: |
          export JMETER_HOME=/opt/apache-jmeter-5.6.3/
          export PATH=$PATH:$JMETER_HOME/bin
          mkdir -p jmeter-testing/target/jmeter/results/report
          mvn -f jmeter-testing/pom.xml clean verify \
          -Dhostname=192.168.56.101 -Dport=9010 -Dcontext=/mvcapp/calculate

      - name: Upload JMeter Performance Test Report
        uses: actions/upload-artifact@v3
        with:
          name: JMeter Performance Test Report
          path: jmeter-testing/target/jmeter/reports/Calculator