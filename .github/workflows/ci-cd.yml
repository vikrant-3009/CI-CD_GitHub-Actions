name: CI-CD Workflow

on: workflow_dispatch

jobs:
  junit:
    name: Unit Test
    runs-on: centos-1
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unit Test
        run: mvn -f mvcapp/pom.xml test

      - name: Upload JUnit Test Results
        uses: actions/upload-artifact@v3
        with:
          name: JUnit Test Report
          path: mvcapp/target/surefire-reports/TEST-*.xml
  
  maven:
    name: Build
    runs-on: centos-1
    needs: junit
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Build Project
        run: mvn -f mvcapp/pom.xml clean package -Dmaven.test.failure.ignore=True

  sonar:
    name: Sonar Analysis
    runs-on: centos-1
    needs: maven
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Sonar Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          cd mvcapp
          mvn clean verify sonar:sonar \
          -Dsonar.projectKey=calculator-mvc \
          -Dsonar.sources=src/main/java \
          -Dsonar.tests=src/test/java \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.coverage.jacoco.xmlReportPaths=**/jacoco.xml

  artifactory:
    name: Upload to Artifactory
    runs-on: centos-1
    needs: sonar
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Upload to Artifactory
        env:
          JF_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          JF_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          JF_URL: ${{ secrets.ARTIFACTORY_URL }}
        run: |
          mvn -f mvcapp/pom.xml package
          curl -X PUT -u "$JF_USERNAME:$JF_PASSWORD" \
          -T mvcapp/target/mvcapp.war "$JF_URL/calculator-app/dev/mvcapp.war"

  docker-image:
    name: Docker Image Creation
    runs-on: centos-2
    needs: artifactory
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        id: build
        run: |
          cd mvcapp
          docker build \
          --build-arg="ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}" \
          --build-arg="ARTIFACTORY_PASSWORD=${{ secrets.ARTIFACTORY_PASSWORD }}" \
          --build-arg="ARTIFACTORY_URL=${{ secrets.ARTIFACTORY_URL }}" \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/demo-calculator:${{ github.run_number }} .

  docker-push:
    name: Docker Image Push
    runs-on: centos-2
    needs: docker-image
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Push Image to DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/demo-calculator:${{ github.run_number }}

  docker-run:
    name: Docker Image Deployment
    runs-on: centos-2
    needs: docker-push
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Pre Docker Run
        run: |
          docker ps -q -a --filter name="^calculator-app$" | xargs -r docker stop calculator-app || true
          docker ps -q -a --filter name="^calculator-app$" | xargs -r docker rm calculator-app || true

      - name: Run the container
        run: |
          docker run -d -p 9010:8080 --name calculator-app \
          ${{ secrets.DOCKERHUB_USERNAME }}/demo-calculator:${{ github.run_number }}

  monitor:
    name: Monitoring Using Dockprom
    runs-on: centos-2
    needs: docker-run
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: setup dockprom
        env:
          CADDY_USER: ${{ secrets.CADDY_USER }}
          CADDY_PASSWORD: ${{ secrets.CADDY_PASSWORD }}
          CADDY_PASSWORD_HASH: ${{ secrets.CADDY_PASSWORD_HASH }}
        run: |
          git clone ${{ vars.DOCKPROM_REPO_URL }} && cd dockprom
          ADMIN_USER='$CADDY_USER' ADMIN_PASSWORD='$CADDY_PASSWORD' ADMIN_PASSWORD_HASH='$CADDY_PASSWORD_HASH'
          docker compose up -d

  selenium:
    name: selenium-automation-test
    runs-on: centos-2
    needs: monitor
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Test
        id: run-test
        run: |
          export JAVA_HOME=/opt/jdk-17.0.2/
          export M2_HOME=/opt/apache-maven-3.9.6/
          export PATH=$PATH:$M2_HOME/bin
          mvn -f selenium-testing/pom.xml test -Dmaven.test.failure.ignore=true \
          -Dhostname=192.168.56.104 -Dport=9010 -Dcontext=/mvcapp/calculate

      - name: Move Selenium Test Report to a new directory
        if: steps.run-test.outcome == 'success'
        run: |
          mkdir -p selenium-testing/target/deploy-reports
          cp selenium-testing/target/surefire-reports/emailable-report.html selenium-testing/target/deploy-reports/selenium.html

      - name: Upload Selenium Test Report
        uses: actions/upload-artifact@v3
        with:
          name: Selenium Test Report
          path: selenium-testing/target/deploy-reports/selenium.html

  jmeter:
    name: jmeter-performance-test
    runs-on: centos-1
    needs: selenium
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Test
        run: |
          export JMETER_HOME=/opt/apache-jmeter-5.6.3/
          export PATH=$PATH:$JMETER_HOME/bin
          mkdir -p jmeter-testing/target/jmeter/results/report
          mvn -f jmeter-testing/pom.xml clean verify \
          -Dhostname=192.168.56.104 -Dport=9010 -Dcontext=/mvcapp/calculate

      - name: Rename the index.html file of jmeter report
        run: |
          cd jmeter-testing/target/jmeter/reports/Calculator
          mv index.html jmeter.html

      - name: Upload JMeter Performance Test Report
        uses: actions/upload-artifact@v3
        with:
          name: JMeter Performance Test Report
          path: jmeter-testing/target/jmeter/reports/Calculator

  deploy-test-reports:
    name: deploy-test-reports
    runs-on: centos-2
    needs: [selenium, jmeter]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
                
      - name: Download Selenium Test Report
        uses: actions/download-artifact@v3
        with:
          name: Selenium Test Report
          path: test-reports
                
      - name: Download JMeter Test Report
        uses: actions/download-artifact@v3
        with:
          name: JMeter Performance Test Report
          path: test-reports
                
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          token: ${{ secrets.ACCESS_TOKEN_GITHUB }}
          folder: 'test-reports'
          branch: gh-pages