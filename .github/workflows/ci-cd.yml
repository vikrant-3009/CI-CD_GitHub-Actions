name: CI-CD workflow

on: workflow_dispatch

jobs:
  maven:
    name: Maven Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK-17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Unit Test
        run: cd mvcapp && mvn test

      - name: Build Project
        run: cd mvcapp && mvn clean package

      - name: Archive Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: app/target/calculator-app.war
          overwrite: true

  sonar-and-artifactory:
    name: analyse-and-upload
    runs-on: centos-1
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Sonar Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          cd mvcapp
          mvn clean verify sonar:sonar \
          -Dsonar.projectKey=calculator-mvc \
          -Dsonar.sources=src/main/java \
          -Dsonar.tests=src/test/java \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.coverage.jacoco.xmlReportPaths=**/jacoco.xml

      - name: Upload to Artifactory
        env:
          JF_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          JF_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          JF_URL: ${{ secrets.ARTIFACTORY_URL }}
        run: |
          cd mvcapp
          curl -X PUT -u "$JF_USERNAME:$JF_PASSWORD" \
          -T target/mvcapp.war "$JF_URL/calculator-app/dev/mvcapp.war"

  docker:
    name: docker-build-and-deploy
    runs-on: centos-2
    needs: sonar-and-artifactory
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        id: build
        run: |
          cd mvcapp
          docker build \
          --build-arg="ARTIFACTORY_USERNAME=${{ secrets.ARTIFACTORY_USERNAME }}" \
          --build-arg="ARTIFACTORY_PASSWORD=${{ secrets.ARTIFACTORY_PASSWORD }}" \
          --build-arg="ARTIFACTORY_URL=${{ secrets.ARTIFACTORY_URL }}" \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/demo-calculator:${{ github.run_number }} .

      - name: Push Image to DockerHub
        if: steps.build.outcome == 'success'
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/demo-calculator:${{ github.run_number }}

      - name: Pre Docker Run
        id: pre-run
        if: steps.build.outcome == 'success'
        run: |
          docker ps -q -a --filter name="^calculator-app$" | xargs -r docker stop calculator-app
          docker ps -q -a --filter name="^calculator-app$" | xargs -r docker rm calculator-app

      - name: Run the container
        if: steps.pre-run.outcome == 'success'
        run: |
          docker run -d -p 9010:8080 --name calculator-app \
          ${{ secrets.DOCKERHUB_USERNAME }}/demo-calculator:${{ github.run_number }}

  selenium:
    name: selenium-automation-test
    runs-on: centos-2
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Test
        run: |
          cd selenium-testing
          mvn test